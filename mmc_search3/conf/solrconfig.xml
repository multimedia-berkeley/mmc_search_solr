<?xml version="1.0" encoding="utf-8" ?>
<!--
Copyright 2011, 2013, 2014 Hendrik Schnepel
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<config>
  <luceneMatchVersion>7.0.1</luceneMatchVersion>
  <requestHandler name="/select" class="solr.SearchHandler" default="true" />
  <requestHandler name="/update" class="solr.UpdateRequestHandler" />
  <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
    <lst name="invariants">
      <str name="qt">search</str>
      <str name="q">*:*</str>
    </lst>
  </requestHandler>
  <!-- *** WARNING ***
     The settings below authorize Solr to fetch remote files, You
     should make sure your system has some authentication before
     using enableRemoteStreaming="true"
  -->
  <requestDispatcher handleSelect="false" >
  <requestParsers enableRemoteStreaming="true" />
  </requestDispatcher>
  <updateHandler class="solr.DirectUpdateHandler2">
      
      <!-- Enables a transaction log, used for real-time get, durability, and
       and solr cloud replica recovery.  The log can grow as big as
       uncommitted changes to the index, so use of a hard autoCommit
       is recommended (see below).
       "dir" - the target directory for transaction logs, defaults to the
       solr data directory.  -->
      <updateLog>
          <str name="dir">${solr.ulog.dir:}</str>
      </updateLog>
      
      <!-- AutoCommit
       Perform a hard commit automatically under certain conditions.
       Instead of enabling autoCommit, consider using "commitWithin"
       when adding documents.
       http://wiki.apache.org/solr/UpdateXmlMessages
       maxDocs - Maximum number of documents to add since the last
       commit before automatically triggering a new commit.
       maxTime - Maximum amount of time in ms that is allowed to pass
       since a document was added before automatically
       triggering a new commit.
       openSearcher - if false, the commit causes recent index changes
       to be flushed to stable storage, but does not cause a new
       searcher to be opened to make those changes visible.
       If the updateLog is enabled, then it's highly recommended to
       have some sort of hard autoCommit to limit the log size.
       -->
      <autoCommit>
          <maxTime>6000000</maxTime>
          <openSearcher>false</openSearcher>
      </autoCommit>
      
      <!-- softAutoCommit is like autoCommit except it causes a
       'soft' commit which only ensures that changes are visible
       but does not ensure that data is synced to disk.  This is
       faster and more near-realtime friendly than a hard commit.
       -->

<!--       <autoSoftCommit>-->
<!--       <maxTime>900000</maxTime>-->
<!--       </autoSoftCommit>-->

      
      <!-- Update Related Event Listeners
       
       Various IndexWriter related events can trigger Listeners to
       take actions.
       postCommit - fired after every commit or optimize command
       postOptimize - fired after every optimize command
       -->
      <!-- The RunExecutableListener executes an external command from a
       hook such as postCommit or postOptimize.
       
       exe - the name of the executable to run
       dir - dir to use as the current working directory. (default=".")
       wait - the calling thread waits until the executable returns.
       (default="true")
       args - the arguments to pass to the program.  (default is none)
       env - environment variables to set.  (default is none)
       -->
      <!-- This example shows how RunExecutableListener could be used
       with the script based replication...
       http://wiki.apache.org/solr/CollectionDistribution
       -->
      <!--
       <listener event="postCommit" class="solr.RunExecutableListener">
       <str name="exe">solr/bin/snapshooter</str>
       <str name="dir">.</str>
       <bool name="wait">true</bool>
       <arr name="args"> <str>arg1</str> <str>arg2</str> </arr>
       <arr name="env"> <str>MYVAR=val1</str> </arr>
       </listener>
       -->
      
  </updateHandler>
</config>
